import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/src/components/Modals/CreateAuxiliares.jsx");import __vite__cjsImport0_react_jsxDevRuntime from "/node_modules/.vite/deps/react_jsx-dev-runtime.js?v=324a4e66"; const jsxDEV = __vite__cjsImport0_react_jsxDevRuntime["jsxDEV"];
import * as RefreshRuntime from "/@react-refresh";
const inWebWorker = typeof WorkerGlobalScope !== "undefined" && self instanceof WorkerGlobalScope;
let prevRefreshReg;
let prevRefreshSig;
if (import.meta.hot && !inWebWorker) {
  if (!window.$RefreshReg$) {
    throw new Error(
      "@vitejs/plugin-react can't detect preamble. Something is wrong."
    );
  }
  prevRefreshReg = window.$RefreshReg$;
  prevRefreshSig = window.$RefreshSig$;
  window.$RefreshReg$ = RefreshRuntime.getRefreshReg("C:/Users/Germa/OneDrive/Escritorio/Sistema de Gestion portable/gestion-app-electron/renderer/src/components/Modals/CreateAuxiliares.jsx");
  window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;
}
var _s = $RefreshSig$();
import __vite__cjsImport3_react from "/node_modules/.vite/deps/react.js?v=324a4e66"; const React = __vite__cjsImport3_react.__esModule ? __vite__cjsImport3_react.default : __vite__cjsImport3_react; const useState = __vite__cjsImport3_react["useState"]; const useEffect = __vite__cjsImport3_react["useEffect"];
import styled from "/node_modules/.vite/deps/styled-components.js?v=324a4e66";
export default function Modal({ isOpen, title, onClose, setState, url, campos_auto = {}, campo_ignorado = [] }) {
  _s();
  const [data, setData] = useState({});
  const [formValues, setFormValues] = useState({});
  const [mensaje, setMensaje] = useState("");
  const [error, setError] = useState("");
  const camposIgnorados = Array.isArray(campo_ignorado) ? campo_ignorado : [campo_ignorado];
  useEffect(() => {
    async function fetchform() {
      const response = await window.api.get(`/api/generico/form/${url}`);
      if (response.error) {
        setError(response.error);
      } else {
        setData(response);
      }
    }
    fetchform();
  }, [url]);
  useEffect(() => {
    if (data.campos) {
      const ResetValor = {};
      data.campos.forEach((campo) => {
        ResetValor[campo] = "";
      });
      setFormValues(ResetValor);
    }
  }, [data]);
  useEffect(() => {
    if (!isOpen && data.campos) {
      const valoresVacios = {};
      data.campos.forEach((campo) => {
        valoresVacios[campo] = "";
      });
      setFormValues(valoresVacios);
      setMensaje("");
      setError("");
    }
  }, [isOpen, data]);
  const handleChange = (e) => {
    const { name, value, type, files } = e.target;
    if (type === "file") {
      setFormValues((prev) => ({ ...prev, [name]: files[0] }));
    } else {
      setFormValues((prev) => ({ ...prev, [name]: value }));
    }
  };
  const handleSubmit = async (e) => {
    e.preventDefault();
    setMensaje("");
    setError("");
    const formData = new FormData();
    for (const key in formValues) {
      formData.append(key, formValues[key]);
    }
    for (const key in campos_auto) {
      formData.append(key, campos_auto[key]);
    }
    if (url === "proveedor") {
      formData.set("estado", "1");
    }
    if (url === "departamento") {
      formData.set("estado", "ACTIVO");
    }
    try {
      console.log(url);
      for (let pair of formData.entries()) {
        console.log(pair[0] + ": " + pair[1]);
      }
      const res = await fetch(`http://localhost:3001/api/generico/${url}`, {
        method: "POST",
        body: formData
      });
      const text = await res.text();
      let respuesta = {};
      if (text) {
        try {
          respuesta = JSON.parse(text);
        } catch {
          setError("Respuesta del servidor no es JSON válido");
          return;
        }
      }
      if (!res.ok) {
        setError(`Error al guardar: ${respuesta.error || text || res.statusText}`);
        return;
      }
      setMensaje(`${url} creado correctamente`);
      const limpio = {};
      data.campos.forEach((campo) => limpio[campo] = "");
      setFormValues(limpio);
      const nuevaLista = await window.api.get(`/api/generico/${url}`);
      if (!nuevaLista.error) setState(nuevaLista.data);
      onClose();
    } catch (err) {
      setError("Error: " + err.message);
    }
  };
  const relacionesMap = {};
  data.relaciones?.forEach((rel) => {
    relacionesMap[`${rel.nombre}_id`] = rel;
  });
  return /* @__PURE__ */ jsxDEV(Overlay, { isOpen, onClick: onClose, children: /* @__PURE__ */ jsxDEV(ModalContainer, { onClick: (e) => e.stopPropagation(), children: [
    /* @__PURE__ */ jsxDEV(CloseButton, { onClick: onClose, children: "×" }, void 0, false, {
      fileName: "C:/Users/Germa/OneDrive/Escritorio/Sistema de Gestion portable/gestion-app-electron/renderer/src/components/Modals/CreateAuxiliares.jsx",
      lineNumber: 149,
      columnNumber: 9
    }, this),
    /* @__PURE__ */ jsxDEV(Title, { children: title }, void 0, false, {
      fileName: "C:/Users/Germa/OneDrive/Escritorio/Sistema de Gestion portable/gestion-app-electron/renderer/src/components/Modals/CreateAuxiliares.jsx",
      lineNumber: 150,
      columnNumber: 9
    }, this),
    /* @__PURE__ */ jsxDEV("form", { onSubmit: handleSubmit, children: [
      data.campos && data.campos.map((campo) => {
        if (camposIgnorados.includes(campo)) return null;
        const relacion = relacionesMap[campo];
        return /* @__PURE__ */ jsxDEV(FormField, { children: relacion ? /* @__PURE__ */ jsxDEV(
          "select",
          {
            name: campo,
            value: formValues[campo] || "",
            onChange: handleChange,
            children: [
              /* @__PURE__ */ jsxDEV("option", { value: "", children: [
                "Seleccione una ",
                relacion.nombre.replace("_", " ")
              ] }, void 0, true, {
                fileName: "C:/Users/Germa/OneDrive/Escritorio/Sistema de Gestion portable/gestion-app-electron/renderer/src/components/Modals/CreateAuxiliares.jsx",
                lineNumber: 166,
                columnNumber: 23
              }, this),
              relacion.datos.map(
                (item) => /* @__PURE__ */ jsxDEV("option", { value: item.id, children: item[relacion.labelField] }, item.id, false, {
                  fileName: "C:/Users/Germa/OneDrive/Escritorio/Sistema de Gestion portable/gestion-app-electron/renderer/src/components/Modals/CreateAuxiliares.jsx",
                  lineNumber: 170,
                  columnNumber: 19
                }, this)
              )
            ]
          },
          void 0,
          true,
          {
            fileName: "C:/Users/Germa/OneDrive/Escritorio/Sistema de Gestion portable/gestion-app-electron/renderer/src/components/Modals/CreateAuxiliares.jsx",
            lineNumber: 161,
            columnNumber: 17
          },
          this
        ) : campo.toLowerCase().includes("imagen") || campo.toLowerCase().includes("foto") ? (
          // Detectamos campos que probablemente sean imagen y renderizamos input file
          /* @__PURE__ */ jsxDEV(
            "input",
            {
              type: "file",
              accept: "image/*",
              name: campo,
              onChange: handleChange
            },
            void 0,
            false,
            {
              fileName: "C:/Users/Germa/OneDrive/Escritorio/Sistema de Gestion portable/gestion-app-electron/renderer/src/components/Modals/CreateAuxiliares.jsx",
              lineNumber: 177,
              columnNumber: 17
            },
            this
          )
        ) : /* @__PURE__ */ jsxDEV(
          "input",
          {
            name: campo,
            placeholder: campo,
            value: formValues[campo] || "",
            onChange: handleChange
          },
          void 0,
          false,
          {
            fileName: "C:/Users/Germa/OneDrive/Escritorio/Sistema de Gestion portable/gestion-app-electron/renderer/src/components/Modals/CreateAuxiliares.jsx",
            lineNumber: 184,
            columnNumber: 17
          },
          this
        ) }, campo, false, {
          fileName: "C:/Users/Germa/OneDrive/Escritorio/Sistema de Gestion portable/gestion-app-electron/renderer/src/components/Modals/CreateAuxiliares.jsx",
          lineNumber: 159,
          columnNumber: 15
        }, this);
      }),
      /* @__PURE__ */ jsxDEV(SubmitButton, { type: "submit", children: "Guardar" }, void 0, false, {
        fileName: "C:/Users/Germa/OneDrive/Escritorio/Sistema de Gestion portable/gestion-app-electron/renderer/src/components/Modals/CreateAuxiliares.jsx",
        lineNumber: 194,
        columnNumber: 11
      }, this)
    ] }, void 0, true, {
      fileName: "C:/Users/Germa/OneDrive/Escritorio/Sistema de Gestion portable/gestion-app-electron/renderer/src/components/Modals/CreateAuxiliares.jsx",
      lineNumber: 151,
      columnNumber: 9
    }, this),
    mensaje && /* @__PURE__ */ jsxDEV(MessageSuccess, { children: mensaje }, void 0, false, {
      fileName: "C:/Users/Germa/OneDrive/Escritorio/Sistema de Gestion portable/gestion-app-electron/renderer/src/components/Modals/CreateAuxiliares.jsx",
      lineNumber: 197,
      columnNumber: 21
    }, this),
    error && /* @__PURE__ */ jsxDEV(MessageError, { children: error }, void 0, false, {
      fileName: "C:/Users/Germa/OneDrive/Escritorio/Sistema de Gestion portable/gestion-app-electron/renderer/src/components/Modals/CreateAuxiliares.jsx",
      lineNumber: 198,
      columnNumber: 19
    }, this)
  ] }, void 0, true, {
    fileName: "C:/Users/Germa/OneDrive/Escritorio/Sistema de Gestion portable/gestion-app-electron/renderer/src/components/Modals/CreateAuxiliares.jsx",
    lineNumber: 148,
    columnNumber: 7
  }, this) }, void 0, false, {
    fileName: "C:/Users/Germa/OneDrive/Escritorio/Sistema de Gestion portable/gestion-app-electron/renderer/src/components/Modals/CreateAuxiliares.jsx",
    lineNumber: 147,
    columnNumber: 5
  }, this);
}
_s(Modal, "pH3CGze3TiGH3SEeg8Cp7BU3vmg=");
_c = Modal;
const Overlay = styled.div`
  position: fixed;
  inset: 0; /* top, right, bottom, left = 0 */
  background: rgba(0, 0, 0, 0.5);
  display: ${({ isOpen }) => isOpen ? "flex" : "none"};
  align-items: center;
  justify-content: center;
  z-index: 1000;
  backdrop-filter: blur(4px);
  transition: opacity 0.3s ease;
`;
_c2 = Overlay;
const ModalContainer = styled.div`
  background: #fff;
  padding: 32px 28px;
  border-radius: 16px;
  max-width: 600px;
  width: 95%;
  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.2);
  position: relative;
  max-height: 90vh;
  overflow-y: auto;

  form > div {
    margin-bottom: 16px;
  }

  select,
  input {
    width: 100%;
    padding: 10px 14px;
    font-size: 16px;
    border: 1.8px solid #ccc;
    border-radius: 8px;
    transition: border-color 0.25s ease;
    outline-offset: 2px;

    &:focus {
      border-color: #357edd;
      outline: none;
      box-shadow: 0 0 6px #357edd99;
    }
  }
`;
_c3 = ModalContainer;
const CloseButton = styled.button`
  position: absolute;
  right: 16px;
  top: 12px;
  background: none;
  border: none;
  font-size: 28px;
  font-weight: bold;
  cursor: pointer;
  color: #666;
  transition: color 0.3s ease;

  &:hover {
    color: #e74c3c;
  }
`;
_c4 = CloseButton;
const Title = styled.h2`
  margin-top: 0;
  margin-bottom: 24px;
  font-weight: 700;
  font-size: 26px;
  color: #222;
`;
_c5 = Title;
const FormField = styled.div`
  margin-bottom: 16px;
`;
_c6 = FormField;
const SubmitButton = styled.button`
  background-color: #357edd;
  color: white;
  border: none;
  border-radius: 10px;
  padding: 14px 22px;
  font-weight: 600;
  font-size: 17px;
  cursor: pointer;
  transition: background-color 0.3s ease;

  &:hover {
    background-color: #285bb5;
  }
`;
_c7 = SubmitButton;
const MessageSuccess = styled.p`
  color: #2ecc71;
  font-weight: 600;
  margin-top: 12px;
`;
_c8 = MessageSuccess;
const MessageError = styled.p`
  color: #e74c3c;
  font-weight: 600;
  margin-top: 12px;
`;
_c9 = MessageError;
var _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;
$RefreshReg$(_c, "Modal");
$RefreshReg$(_c2, "Overlay");
$RefreshReg$(_c3, "ModalContainer");
$RefreshReg$(_c4, "CloseButton");
$RefreshReg$(_c5, "Title");
$RefreshReg$(_c6, "FormField");
$RefreshReg$(_c7, "SubmitButton");
$RefreshReg$(_c8, "MessageSuccess");
$RefreshReg$(_c9, "MessageError");
if (import.meta.hot && !inWebWorker) {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
if (import.meta.hot && !inWebWorker) {
  RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
    RefreshRuntime.registerExportsForReactRefresh("C:/Users/Germa/OneDrive/Escritorio/Sistema de Gestion portable/gestion-app-electron/renderer/src/components/Modals/CreateAuxiliares.jsx", currentExports);
    import.meta.hot.accept((nextExports) => {
      if (!nextExports) return;
      const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate("C:/Users/Germa/OneDrive/Escritorio/Sistema de Gestion portable/gestion-app-electron/renderer/src/components/Modals/CreateAuxiliares.jsx", currentExports, nextExports);
      if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
    });
  });
}

//# sourceMappingURL=data:application/json;base64,