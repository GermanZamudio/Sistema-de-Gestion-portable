import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/src/components/Modals/CreateAsignado.jsx");import __vite__cjsImport0_react_jsxDevRuntime from "/node_modules/.vite/deps/react_jsx-dev-runtime.js?v=324a4e66"; const Fragment = __vite__cjsImport0_react_jsxDevRuntime["Fragment"]; const jsxDEV = __vite__cjsImport0_react_jsxDevRuntime["jsxDEV"];
import * as RefreshRuntime from "/@react-refresh";
const inWebWorker = typeof WorkerGlobalScope !== "undefined" && self instanceof WorkerGlobalScope;
let prevRefreshReg;
let prevRefreshSig;
if (import.meta.hot && !inWebWorker) {
  if (!window.$RefreshReg$) {
    throw new Error(
      "@vitejs/plugin-react can't detect preamble. Something is wrong."
    );
  }
  prevRefreshReg = window.$RefreshReg$;
  prevRefreshSig = window.$RefreshSig$;
  window.$RefreshReg$ = RefreshRuntime.getRefreshReg("C:/Users/Germa/OneDrive/Escritorio/Sistema de Gestion portable/gestion-app-electron/renderer/src/components/Modals/CreateAsignado.jsx");
  window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;
}
var _s = $RefreshSig$();
import __vite__cjsImport3_react from "/node_modules/.vite/deps/react.js?v=324a4e66"; const React = __vite__cjsImport3_react.__esModule ? __vite__cjsImport3_react.default : __vite__cjsImport3_react; const useState = __vite__cjsImport3_react["useState"]; const useEffect = __vite__cjsImport3_react["useEffect"];
import styled from "/node_modules/.vite/deps/styled-components.js?v=324a4e66";
export default function ModalArtAsignado({ isOpen, title, onClose, setState, id, tipo }) {
  _s();
  const [articulosDisponibles, setArticulosDisponibles] = useState([]);
  const [formValues, setFormValues] = useState({
    articulo_id: "",
    cantidad_asignada: "",
    cantidad_entregada: ""
  });
  const [mensaje, setMensaje] = useState("");
  const [error, setError] = useState("");
  useEffect(() => {
    async function fetchDatos() {
      let tipo_bien_query = "";
      if (tipo === "uso") tipo_bien_query = "uso";
      else if (tipo === "consumo") tipo_bien_query = "consumo";
      else if (tipo === "stock" || tipo === "articulo") tipo_bien_query = "stock";
      const url = tipo_bien_query ? `/api/form/agregar_items/?tipo_bien=${tipo_bien_query}` : `/api/form/agregar_items/`;
      const response = await window.api.get(url);
      if (response.error) {
        setError(response.error);
      } else {
        if (["uso", "consumo", "stock", "articulo"].includes(tipo)) {
          setArticulosDisponibles(response.articulos || []);
        } else if (tipo === "asignar_sobrante") {
          setArticulosDisponibles(response.sobrantes || []);
        } else if (tipo === "identificado") {
          setArticulosDisponibles(response.identificados || []);
        } else {
          setArticulosDisponibles([]);
        }
      }
    }
    if (isOpen) fetchDatos();
  }, [isOpen, tipo]);
  useEffect(() => {
    if (!isOpen) {
      setFormValues({
        articulo_id: "",
        cantidad_asignada: "",
        cantidad_entregada: ""
      });
      setMensaje("");
      setError("");
      setArticulosDisponibles([]);
    }
  }, [isOpen, tipo]);
  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormValues((prev) => ({ ...prev, [name]: value }));
  };
  const handleSubmit = async (e) => {
    e.preventDefault();
    setMensaje("");
    setError("");
    const { articulo_id } = formValues;
    if (!articulo_id) {
      setError("Debe seleccionar un artículo válido.");
      return;
    }
    const art = articulosDisponibles.find((a) => a.id === parseInt(articulo_id));
    if (!art) {
      setError("Artículo no encontrado.");
      return;
    }
    if (["articulo", "uso", "consumo", "stock"].includes(tipo)) {
      const disponible = parseInt(art.cantidad || 0);
      const asignada = parseInt(formValues.cantidad_asignada);
      const entregada = parseInt(formValues.cantidad_entregada);
      if (isNaN(asignada) || isNaN(entregada)) {
        setError("Las cantidades asignada y entregada deben ser números.");
        return;
      }
      if (asignada > disponible) {
        setError("No puede asignar más de lo disponible.");
        return;
      }
      if (entregada > asignada) {
        setError("La cantidad entregada no puede superar la asignada.");
        return;
      }
      const response = await window.api.post(`/api/form/agregar_items/articulo/${id}`, {
        articulo_id: parseInt(articulo_id),
        cantidad_asignada: asignada,
        cantidad_entregada: entregada
      });
      if (response.error) {
        setError("Error: " + response.error);
      } else {
        setMensaje("Artículo asignado correctamente");
        actualizarLista();
      }
    } else if (tipo === "asignar_sobrante") {
      const cantidad = parseInt(formValues.cantidad_asignada);
      if (isNaN(cantidad) || cantidad <= 0) {
        setError("La cantidad debe ser un número positivo.");
        return;
      }
      const disponible = parseInt(art.cantidad || 0);
      if (cantidad > disponible) {
        setError("No puede asignar más de lo disponible.");
        return;
      }
      const payload = { articulo_id: parseInt(articulo_id), cantidad };
      const response = await window.api.post(`/api/form/agregar_items/asignar_sobrante/${id}`, payload);
      if (response.error) {
        setError("Error: " + response.error);
      } else {
        setMensaje("Sobrante asignado correctamente");
        actualizarLista();
      }
    } else if (tipo === "identificado") {
      const payload = { articulo_identificado_id: parseInt(articulo_id) };
      const response = await window.api.post(`/api/form/agregar_items/identificado/${id}`, payload);
      if (response.error) {
        setError("Error: " + response.error);
      } else {
        setMensaje("Artículo identificado asignado correctamente");
        actualizarLista();
      }
    }
  };
  async function actualizarLista() {
    const nuevaLista = await window.api.get(`/api/orden_servicio/${id}`);
    if (nuevaLista) {
      if (["articulo", "uso", "consumo", "stock"].includes(tipo) && Array.isArray(nuevaLista.articulos_asignados)) {
        setState(nuevaLista.articulos_asignados);
      } else if (tipo === "asignar_sobrante" && Array.isArray(nuevaLista.sobrantes_de_obra)) {
        setState(nuevaLista.sobrantes_de_obra);
      } else if (tipo === "identificado" && Array.isArray(nuevaLista.articulos_asignados_identificados)) {
        console.log("ingrese a identificado");
        setState(nuevaLista);
        setState(nuevaLista.articulos_asignados_identificados);
      }
    }
    setFormValues({
      articulo_id: "",
      cantidad_asignada: "",
      cantidad_entregada: ""
    });
    setTimeout(() => onClose(), 600);
  }
  if (!isOpen) return null;
  return /* @__PURE__ */ jsxDEV(Overlay, { onClick: onClose, children: /* @__PURE__ */ jsxDEV(ModalContainer, { onClick: (e) => e.stopPropagation(), children: [
    /* @__PURE__ */ jsxDEV(CloseButton, { onClick: onClose, children: "×" }, void 0, false, {
      fileName: "C:/Users/Germa/OneDrive/Escritorio/Sistema de Gestion portable/gestion-app-electron/renderer/src/components/Modals/CreateAsignado.jsx",
      lineNumber: 195,
      columnNumber: 9
    }, this),
    /* @__PURE__ */ jsxDEV(Title, { children: title }, void 0, false, {
      fileName: "C:/Users/Germa/OneDrive/Escritorio/Sistema de Gestion portable/gestion-app-electron/renderer/src/components/Modals/CreateAsignado.jsx",
      lineNumber: 196,
      columnNumber: 9
    }, this),
    /* @__PURE__ */ jsxDEV(Form, { onSubmit: handleSubmit, children: [
      /* @__PURE__ */ jsxDEV(FormGroup, { children: [
        /* @__PURE__ */ jsxDEV("label", { children: "Artículo" }, void 0, false, {
          fileName: "C:/Users/Germa/OneDrive/Escritorio/Sistema de Gestion portable/gestion-app-electron/renderer/src/components/Modals/CreateAsignado.jsx",
          lineNumber: 200,
          columnNumber: 13
        }, this),
        /* @__PURE__ */ jsxDEV(
          "select",
          {
            name: "articulo_id",
            value: formValues.articulo_id,
            onChange: handleChange,
            required: true,
            children: [
              /* @__PURE__ */ jsxDEV("option", { value: "", children: "Seleccione un artículo" }, void 0, false, {
                fileName: "C:/Users/Germa/OneDrive/Escritorio/Sistema de Gestion portable/gestion-app-electron/renderer/src/components/Modals/CreateAsignado.jsx",
                lineNumber: 207,
                columnNumber: 15
              }, this),
              articulosDisponibles.map(
                (art, idx) => /* @__PURE__ */ jsxDEV("option", { value: art.id, children: [
                  (tipo === "articulo" || tipo === "stock" || tipo === "uso" || tipo === "consumo") && `${art.nombre} - Cantidad disponible: ${art.cantidad}`,
                  tipo === "asignar_sobrante" && `${art.nombre_articulo} - Cantidad sobrante: ${art.cantidad}`,
                  tipo === "identificado" && `${art.nombre_articulo} - Código: ${art.codigo}`
                ] }, idx, true, {
                  fileName: "C:/Users/Germa/OneDrive/Escritorio/Sistema de Gestion portable/gestion-app-electron/renderer/src/components/Modals/CreateAsignado.jsx",
                  lineNumber: 209,
                  columnNumber: 15
                }, this)
              )
            ]
          },
          void 0,
          true,
          {
            fileName: "C:/Users/Germa/OneDrive/Escritorio/Sistema de Gestion portable/gestion-app-electron/renderer/src/components/Modals/CreateAsignado.jsx",
            lineNumber: 201,
            columnNumber: 13
          },
          this
        )
      ] }, void 0, true, {
        fileName: "C:/Users/Germa/OneDrive/Escritorio/Sistema de Gestion portable/gestion-app-electron/renderer/src/components/Modals/CreateAsignado.jsx",
        lineNumber: 199,
        columnNumber: 11
      }, this),
      (tipo === "articulo" || tipo === "stock" || tipo === "uso" || tipo === "consumo") && /* @__PURE__ */ jsxDEV(Fragment, { children: [
        /* @__PURE__ */ jsxDEV(FormGroup, { children: [
          /* @__PURE__ */ jsxDEV("label", { children: "Cantidad Asignada" }, void 0, false, {
            fileName: "C:/Users/Germa/OneDrive/Escritorio/Sistema de Gestion portable/gestion-app-electron/renderer/src/components/Modals/CreateAsignado.jsx",
            lineNumber: 222,
            columnNumber: 17
          }, this),
          /* @__PURE__ */ jsxDEV(
            "input",
            {
              type: "number",
              name: "cantidad_asignada",
              value: formValues.cantidad_asignada,
              onChange: handleChange,
              required: true,
              min: "1"
            },
            void 0,
            false,
            {
              fileName: "C:/Users/Germa/OneDrive/Escritorio/Sistema de Gestion portable/gestion-app-electron/renderer/src/components/Modals/CreateAsignado.jsx",
              lineNumber: 223,
              columnNumber: 17
            },
            this
          )
        ] }, void 0, true, {
          fileName: "C:/Users/Germa/OneDrive/Escritorio/Sistema de Gestion portable/gestion-app-electron/renderer/src/components/Modals/CreateAsignado.jsx",
          lineNumber: 221,
          columnNumber: 15
        }, this),
        /* @__PURE__ */ jsxDEV(FormGroup, { children: [
          /* @__PURE__ */ jsxDEV("label", { children: "Cantidad Entregada" }, void 0, false, {
            fileName: "C:/Users/Germa/OneDrive/Escritorio/Sistema de Gestion portable/gestion-app-electron/renderer/src/components/Modals/CreateAsignado.jsx",
            lineNumber: 233,
            columnNumber: 17
          }, this),
          /* @__PURE__ */ jsxDEV(
            "input",
            {
              type: "number",
              name: "cantidad_entregada",
              value: formValues.cantidad_entregada,
              onChange: handleChange,
              required: true,
              min: "0"
            },
            void 0,
            false,
            {
              fileName: "C:/Users/Germa/OneDrive/Escritorio/Sistema de Gestion portable/gestion-app-electron/renderer/src/components/Modals/CreateAsignado.jsx",
              lineNumber: 234,
              columnNumber: 17
            },
            this
          )
        ] }, void 0, true, {
          fileName: "C:/Users/Germa/OneDrive/Escritorio/Sistema de Gestion portable/gestion-app-electron/renderer/src/components/Modals/CreateAsignado.jsx",
          lineNumber: 232,
          columnNumber: 15
        }, this)
      ] }, void 0, true, {
        fileName: "C:/Users/Germa/OneDrive/Escritorio/Sistema de Gestion portable/gestion-app-electron/renderer/src/components/Modals/CreateAsignado.jsx",
        lineNumber: 220,
        columnNumber: 11
      }, this),
      tipo === "asignar_sobrante" && /* @__PURE__ */ jsxDEV(FormGroup, { children: [
        /* @__PURE__ */ jsxDEV("label", { children: "Cantidad" }, void 0, false, {
          fileName: "C:/Users/Germa/OneDrive/Escritorio/Sistema de Gestion portable/gestion-app-electron/renderer/src/components/Modals/CreateAsignado.jsx",
          lineNumber: 248,
          columnNumber: 15
        }, this),
        /* @__PURE__ */ jsxDEV(
          "input",
          {
            type: "number",
            name: "cantidad_asignada",
            value: formValues.cantidad_asignada,
            onChange: handleChange,
            required: true,
            min: "1"
          },
          void 0,
          false,
          {
            fileName: "C:/Users/Germa/OneDrive/Escritorio/Sistema de Gestion portable/gestion-app-electron/renderer/src/components/Modals/CreateAsignado.jsx",
            lineNumber: 249,
            columnNumber: 15
          },
          this
        )
      ] }, void 0, true, {
        fileName: "C:/Users/Germa/OneDrive/Escritorio/Sistema de Gestion portable/gestion-app-electron/renderer/src/components/Modals/CreateAsignado.jsx",
        lineNumber: 247,
        columnNumber: 11
      }, this),
      /* @__PURE__ */ jsxDEV(SubmitButton, { type: "submit", children: "Guardar" }, void 0, false, {
        fileName: "C:/Users/Germa/OneDrive/Escritorio/Sistema de Gestion portable/gestion-app-electron/renderer/src/components/Modals/CreateAsignado.jsx",
        lineNumber: 260,
        columnNumber: 11
      }, this),
      mensaje && /* @__PURE__ */ jsxDEV(MensajeSuccess, { children: mensaje }, void 0, false, {
        fileName: "C:/Users/Germa/OneDrive/Escritorio/Sistema de Gestion portable/gestion-app-electron/renderer/src/components/Modals/CreateAsignado.jsx",
        lineNumber: 262,
        columnNumber: 23
      }, this),
      error && /* @__PURE__ */ jsxDEV(MensajeError, { children: error }, void 0, false, {
        fileName: "C:/Users/Germa/OneDrive/Escritorio/Sistema de Gestion portable/gestion-app-electron/renderer/src/components/Modals/CreateAsignado.jsx",
        lineNumber: 263,
        columnNumber: 21
      }, this)
    ] }, void 0, true, {
      fileName: "C:/Users/Germa/OneDrive/Escritorio/Sistema de Gestion portable/gestion-app-electron/renderer/src/components/Modals/CreateAsignado.jsx",
      lineNumber: 198,
      columnNumber: 9
    }, this)
  ] }, void 0, true, {
    fileName: "C:/Users/Germa/OneDrive/Escritorio/Sistema de Gestion portable/gestion-app-electron/renderer/src/components/Modals/CreateAsignado.jsx",
    lineNumber: 194,
    columnNumber: 7
  }, this) }, void 0, false, {
    fileName: "C:/Users/Germa/OneDrive/Escritorio/Sistema de Gestion portable/gestion-app-electron/renderer/src/components/Modals/CreateAsignado.jsx",
    lineNumber: 193,
    columnNumber: 5
  }, this);
}
_s(ModalArtAsignado, "peORYBIlySzqtBHWQGqq8sUSB9M=");
_c = ModalArtAsignado;
const Overlay = styled.div`
  position: fixed;
  inset: 0;
  background: rgba(0, 0, 0, 0.6);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
`;
_c2 = Overlay;
const ModalContainer = styled.div`
  background: #fff;
  padding: 30px 40px;
  border-radius: 12px;
  max-width: 600px;
  width: 90%;
  max-height: 90vh;
  overflow-y: auto;
  position: relative;
`;
_c3 = ModalContainer;
const CloseButton = styled.button`
  position: absolute;
  right: 16px;
  top: 14px;
  background: none;
  border: none;
  font-size: 28px;
  cursor: pointer;
`;
_c4 = CloseButton;
const Title = styled.h2`
  text-align: center;
`;
_c5 = Title;
const Form = styled.form`
  display: flex;
  flex-direction: column;
  gap: 18px;
`;
_c6 = Form;
const FormGroup = styled.div`
  display: flex;
  flex-direction: column;

  label {
    font-weight: bold;
  }

  select,
  input {
    padding: 10px;
    border-radius: 6px;
    border: 1.5px solid #ccc;
  }
`;
_c7 = FormGroup;
const SubmitButton = styled.button`
  background-color: #2980b9;
  border: none;
  color: white;
  padding: 14px 0;
  font-weight: bold;
  border-radius: 8px;
  cursor: pointer;

  &:hover {
    background-color: #1f6391;
  }
`;
_c8 = SubmitButton;
const MensajeSuccess = styled.p`
  margin-top: 15px;
  color: green;
  text-align: center;
`;
_c9 = MensajeSuccess;
const MensajeError = styled.p`
  margin-top: 15px;
  color: red;
  text-align: center;
`;
_c0 = MensajeError;
var _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0;
$RefreshReg$(_c, "ModalArtAsignado");
$RefreshReg$(_c2, "Overlay");
$RefreshReg$(_c3, "ModalContainer");
$RefreshReg$(_c4, "CloseButton");
$RefreshReg$(_c5, "Title");
$RefreshReg$(_c6, "Form");
$RefreshReg$(_c7, "FormGroup");
$RefreshReg$(_c8, "SubmitButton");
$RefreshReg$(_c9, "MensajeSuccess");
$RefreshReg$(_c0, "MensajeError");
if (import.meta.hot && !inWebWorker) {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
if (import.meta.hot && !inWebWorker) {
  RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
    RefreshRuntime.registerExportsForReactRefresh("C:/Users/Germa/OneDrive/Escritorio/Sistema de Gestion portable/gestion-app-electron/renderer/src/components/Modals/CreateAsignado.jsx", currentExports);
    import.meta.hot.accept((nextExports) => {
      if (!nextExports) return;
      const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate("C:/Users/Germa/OneDrive/Escritorio/Sistema de Gestion portable/gestion-app-electron/renderer/src/components/Modals/CreateAsignado.jsx", currentExports, nextExports);
      if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
    });
  });
}

//# sourceMappingURL=data:application/json;base64,